# Autogenerated wrapper script for MUMPS_jll for i686-w64-mingw32-libgfortran3-mpi+microsoftmpi
export libcmumpspar, libdmumpspar, libsmumpspar, libzmumpspar

using CompilerSupportLibraries_jll
using METIS_jll
using PARMETIS_jll
using SCOTCH_jll
using SCALAPACK32_jll
using OpenBLAS32_jll
using MicrosoftMPI_jll
JLLWrappers.@generate_wrapper_header("MUMPS")
JLLWrappers.@declare_library_product(libcmumpspar, "libcmumpspar.dll")
JLLWrappers.@declare_library_product(libdmumpspar, "libdmumpspar.dll")
JLLWrappers.@declare_library_product(libsmumpspar, "libsmumpspar.dll")
JLLWrappers.@declare_library_product(libzmumpspar, "libzmumpspar.dll")
function __init__()
    JLLWrappers.@generate_init_header(CompilerSupportLibraries_jll, METIS_jll, PARMETIS_jll, SCOTCH_jll, SCALAPACK32_jll, OpenBLAS32_jll, MicrosoftMPI_jll, MPIPreferences)
    JLLWrappers.@init_library_product(
        libcmumpspar,
        "bin\\libcmumpspar.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_library_product(
        libdmumpspar,
        "bin\\libdmumpspar.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_library_product(
        libsmumpspar,
        "bin\\libsmumpspar.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_library_product(
        libzmumpspar,
        "bin\\libzmumpspar.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
